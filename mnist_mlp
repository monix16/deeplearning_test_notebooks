{
  "paragraphs": [
    {
      "text": "os.environ[\"KERAS_BACKEND\"] \u003d \"theano\"\nos.environ[\u0027THEANO_FLAGS\u0027] \u003d \u0027floatX\u003dfloat32,device\u003dcuda,dnn.library_path\u003d/usr/local/cuda/lib64,dnn.include_path\u003d/usr/local/cuda/include/\u0027\nos.environ[\u0027MKL_THREADING_LAYER\u0027] \u003d \"GNU\"",
      "user": "prashantp@qubole.com",
      "dateUpdated": "May 25, 2018 7:14:15 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [],
        "numCompletedTasks": 0,
        "numTasks": 0,
        "truncated": false
      },
      "version": "v0",
      "jobName": "paragraph_1516358360368_-1188428579",
      "id": "20180119-103920_405736436_q_QMSMNEG4PJ1527182129",
      "dateCreated": "Jan 19, 2018 10:39:20 AM",
      "dateSubmitted": "May 24, 2018 5:16:03 PM",
      "dateStarted": "May 24, 2018 5:16:19 PM",
      "dateFinished": "May 24, 2018 5:16:41 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "# Confirming backend is changed to Theano\nfrom __future__ import print_function\nimport keras\nfrom keras import backend as K\nprint(K.backend())",
      "dateUpdated": "Jan 22, 2018 1:34:14 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [],
        "numCompletedTasks": 0,
        "numTasks": 0,
        "truncated": false
      },
      "version": "v0",
      "jobName": "paragraph_1516358351925_1863014948",
      "id": "20180119-103911_2068011920_q_QMSMNEG4PJ1527182129",
      "dateCreated": "Jan 19, 2018 10:39:11 AM",
      "dateSubmitted": "May 24, 2018 5:16:19 PM",
      "dateStarted": "May 24, 2018 5:16:42 PM",
      "dateFinished": "May 24, 2018 5:16:42 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "from __future__ import print_function\n\nimport keras\nfrom keras.datasets import mnist\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout\nfrom keras.optimizers import RMSprop\n\nbatch_size \u003d 128\nnum_classes \u003d 10\nepochs \u003d 20\n\n# the data, shuffled and split between train and test sets\n(x_train, y_train), (x_test, y_test) \u003d mnist.load_data()\n\nx_train \u003d x_train.reshape(60000, 784)\nx_test \u003d x_test.reshape(10000, 784)\nx_train \u003d x_train.astype(\u0027float32\u0027)\nx_test \u003d x_test.astype(\u0027float32\u0027)\nx_train /\u003d 255\nx_test /\u003d 255\nprint(x_train.shape[0], \u0027train samples\u0027)\nprint(x_test.shape[0], \u0027test samples\u0027)\n\n# convert class vectors to binary class matrices\ny_train \u003d keras.utils.to_categorical(y_train, num_classes)\ny_test \u003d keras.utils.to_categorical(y_test, num_classes)\n\nmodel \u003d Sequential()\nmodel.add(Dense(512, activation\u003d\u0027relu\u0027, input_shape\u003d(784,)))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(512, activation\u003d\u0027relu\u0027))\nmodel.add(Dropout(0.2))\nmodel.add(Dense(num_classes, activation\u003d\u0027softmax\u0027))\n\nmodel.summary()\n\nmodel.compile(loss\u003d\u0027categorical_crossentropy\u0027,\n              optimizer\u003dRMSprop(),\n              metrics\u003d[\u0027accuracy\u0027])\n\nhistory \u003d model.fit(x_train, y_train,\n                    batch_size\u003dbatch_size,\n                    epochs\u003depochs,\n                    verbose\u003d1,\n                    validation_data\u003d(x_test, y_test))\nscore \u003d model.evaluate(x_test, y_test, verbose\u003d0)\nprint(\u0027Test loss:\u0027, score[0])\nprint(\u0027Test accuracy:\u0027, score[1])",
      "dateUpdated": "Jan 22, 2018 1:34:14 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [],
        "numCompletedTasks": 0,
        "numTasks": 0,
        "truncated": false
      },
      "version": "v0",
      "jobName": "paragraph_1516097587201_778266548",
      "id": "20180116-101307_1892521233_q_QMSMNEG4PJ1527182129",
      "dateCreated": "Jan 16, 2018 10:13:07 AM",
      "dateSubmitted": "May 24, 2018 5:16:42 PM",
      "dateStarted": "May 24, 2018 5:16:42 PM",
      "dateFinished": "May 24, 2018 5:16:43 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "Model : Multilayer Perceptrons.\n\nInput : The MNIST dataset contains 60000 training images of 28x28 size and 10000 testing greyscale images of 28x28 size.\n    \n    The dataset is divided into one training batch with 60000 images and one test batch with 10000 images.\n    \n    Each batch contains a dictionary with the following elements:-\n    \n    data -- a 60000x28x28 numpy array of uint8s in case of training sample and 10000x28x28 numpy array of uint8s in case of testing sample. The first dimension of the array \n    marks the image number and the other dimensions is for the image matrix.\n    labels -- a list of 60000 numbers which are either 0 or 1 for training sample and 10000 numbers  for testing sample. The number at index i indicates the label of the ith            image in the array data.\n\nOutput : Accuracy of the classification done by the trained model. Real No. Between 0-1.",
      "user": "prashantp@qubole.com",
      "dateUpdated": "Jan 22, 2018 1:34:14 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": false,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v0",
      "jobName": "paragraph_1516109530275_1844199058",
      "id": "20180116-133210_693358078_q_QMSMNEG4PJ1527182129",
      "dateCreated": "Jan 16, 2018 1:32:10 PM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Jan 22, 2018 1:34:14 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v0",
      "jobName": "paragraph_1516627210167_-1836989677",
      "id": "20180122-132010_486817821_q_QMSMNEG4PJ1527182129",
      "dateCreated": "Jan 22, 2018 1:20:10 PM",
      "dateSubmitted": "May 24, 2018 5:16:43 PM",
      "dateStarted": "May 24, 2018 5:16:43 PM",
      "dateFinished": "May 24, 2018 5:16:43 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "mnist_mlp",
  "id": "QMSMNEG4PJ1527182129",
  "angularObjects": {
    "2DEK3QV851090031527168688484:shared_process": [],
    "2DDUCEHJK1090031527182144045:shared_process": [],
    "2DENTX6JV1090031527168688466:shared_process": [],
    "2DDED8P751090031527168688477:shared_process": [],
    "2DDBWFX441090031527168688480:shared_process": []
  },
  "config": {
    "isDashboard": false,
    "defaultLang": "pyspark"
  },
  "info": {},
  "source": "FCN"
}