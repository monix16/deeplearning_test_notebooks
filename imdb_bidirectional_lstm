{
  "paragraphs": [
    {
      "text": "os.environ[\"KERAS_BACKEND\"] \u003d \"theano\"\nos.environ[\u0027THEANO_FLAGS\u0027] \u003d \u0027floatX\u003dfloat32,device\u003dcuda,dnn.library_path\u003d/usr/local/cuda/lib64,dnn.include_path\u003d/usr/local/cuda/include/\u0027\nos.environ[\u0027MKL_THREADING_LAYER\u0027] \u003d \"GNU\"",
      "user": "prashantp@qubole.com",
      "dateUpdated": "May 25, 2018 7:34:33 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [],
        "numCompletedTasks": 0,
        "numTasks": 0,
        "truncated": false
      },
      "version": "v0",
      "jobName": "paragraph_1516357809811_-1740758542",
      "id": "20180119-103009_1070809392_q_9FXXKP774T1527184942",
      "dateCreated": "Jan 19, 2018 10:30:09 AM",
      "dateSubmitted": "May 24, 2018 6:02:57 PM",
      "dateStarted": "May 24, 2018 6:03:36 PM",
      "dateFinished": "May 24, 2018 6:04:31 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "# Confirming backend is changed to Theano\nfrom __future__ import print_function\nimport keras\nfrom keras import backend as K\nprint(K.backend())",
      "dateUpdated": "Jan 22, 2018 7:06:31 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [],
        "numCompletedTasks": 0,
        "numTasks": 0,
        "truncated": false
      },
      "version": "v0",
      "jobName": "paragraph_1516357816832_-1225028094",
      "id": "20180119-103016_986098899_q_9FXXKP774T1527184942",
      "dateCreated": "Jan 19, 2018 10:30:16 AM",
      "dateSubmitted": "May 24, 2018 6:03:36 PM",
      "dateStarted": "May 24, 2018 6:04:32 PM",
      "dateFinished": "May 24, 2018 6:04:55 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "from __future__ import print_function\nimport numpy as np\n\nfrom keras.preprocessing import sequence\nfrom keras.models import Sequential\nfrom keras.layers import Dense, Dropout, Embedding, LSTM, Bidirectional\nfrom keras.datasets import imdb\n\n\nmax_features \u003d 20000\n# cut texts after this number of words\n# (among top max_features most common words)\nmaxlen \u003d 100\nbatch_size \u003d 32\n\nprint(\u0027Loading data...\u0027)\n(x_train, y_train), (x_test, y_test) \u003d imdb.load_data(num_words\u003dmax_features)\nprint(len(x_train), \u0027train sequences\u0027)\nprint(len(x_test), \u0027test sequences\u0027)\n\nprint(\u0027Pad sequences (samples x time)\u0027)\nx_train \u003d sequence.pad_sequences(x_train, maxlen\u003dmaxlen)\nx_test \u003d sequence.pad_sequences(x_test, maxlen\u003dmaxlen)\nprint(\u0027x_train shape:\u0027, x_train.shape)\nprint(\u0027x_test shape:\u0027, x_test.shape)\ny_train \u003d np.array(y_train)\ny_test \u003d np.array(y_test)\n\nmodel \u003d Sequential()\nmodel.add(Embedding(max_features, 128, input_length\u003dmaxlen))\nmodel.add(Bidirectional(LSTM(64)))\nmodel.add(Dropout(0.5))\nmodel.add(Dense(1, activation\u003d\u0027sigmoid\u0027))\n\n# try using different optimizers and different optimizer configs\nmodel.compile(\u0027adam\u0027, \u0027binary_crossentropy\u0027, metrics\u003d[\u0027accuracy\u0027])\n\nprint(\u0027Train...\u0027)\nmodel.fit(x_train, y_train,\n          batch_size\u003dbatch_size,\n          epochs\u003d1,\n          validation_data\u003d[x_test, y_test])\n",
      "dateUpdated": "Jan 22, 2018 7:06:31 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "paragraphProgress": {
        "jobs": [],
        "numCompletedTasks": 0,
        "numTasks": 0,
        "truncated": false
      },
      "version": "v0",
      "jobName": "paragraph_1516095215230_153248276",
      "id": "20180116-093335_869808593_q_9FXXKP774T1527184942",
      "dateCreated": "Jan 16, 2018 9:33:35 AM",
      "dateSubmitted": "May 24, 2018 6:04:32 PM",
      "dateStarted": "May 24, 2018 6:04:55 PM",
      "dateFinished": "May 24, 2018 6:04:55 PM",
      "status": "ERROR",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "Bidirectional LSTMs train two instead of one LSTMs on the input sequence. The first on the input sequence as-is and the second on a reversed copy of the input sequence. This can provide additional context to the network and result in faster and even fuller learning on the problem.\n\nInput : IMDB Dataset. It contains 25000 movie reviews in each training as well as testing batch.\n    Each batch contains a dictionary with the following elements:-\n    \n    data -- an array of 25000 lists for each training as well as testing batch. Each element in the list has different length and is a review encoded as a sequence of word              indexes(integers).\n    labels -- an array of 25000 numbers either 0 or 1 for both training as well as testing batch. The number at index i indicates the label of the ith image in the                      array data.\n\nOutput : Accuracy of the classification done by the trained model.  Real No. Between 0-1.",
      "user": "prashantp@qubole.com",
      "dateUpdated": "Jan 22, 2018 7:06:32 AM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": false,
        "editorMode": "ace/mode/python"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v0",
      "jobName": "paragraph_1516097450516_1196706430",
      "id": "20180116-101050_1169050730_q_9FXXKP774T1527184942",
      "dateCreated": "Jan 16, 2018 10:10:50 AM",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "version": "v0",
      "jobName": "paragraph_1516604792080_-397470322",
      "id": "20180122-070632_1613628942_q_9FXXKP774T1527184942",
      "dateCreated": "Jan 22, 2018 7:06:32 AM",
      "dateSubmitted": "May 24, 2018 6:04:55 PM",
      "dateStarted": "May 24, 2018 6:04:59 PM",
      "dateFinished": "May 24, 2018 6:04:59 PM",
      "status": "FINISHED",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "imdb_bidirectional_lstm",
  "id": "9FXXKP774T1527184942",
  "angularObjects": {
    "2DEK3QV851090031527168688484:shared_process": [],
    "2DENTX6JV1090031527168688466:shared_process": [],
    "2DE7W52GT1090031527184957801:shared_process": [],
    "2DDED8P751090031527168688477:shared_process": [],
    "2DDBWFX441090031527168688480:shared_process": []
  },
  "config": {
    "isDashboard": false,
    "defaultLang": "pyspark"
  },
  "info": {},
  "source": "FCN"
}